# HumanEval/40: Find sum of list
(triples_sum_to_zero lst) = 
  (find_triples lst lst lst);

(find_triples (nil) _ _) = (f);
(find_triples _ (nil) _) = (f);
(find_triples _ _ (nil)) = (f);
(find_triples (cons x xs) ys zs) = 
  (if (find_pairs ys zs (sub (z) x))
      (t)
      (find_triples xs ys zs));

(find_pairs (nil) _ _) = (f);
(find_pairs _ (nil) _) = (f);
(find_pairs (cons y ys) zs sum) = 
  (if (find_sum zs (sub sum y))
      (t)
      (find_pairs ys zs sum));

(find_sum (nil) _) = (f);
(find_sum (cons z zs) sum) = 
  (if (eq z sum)
      (t)
      (find_sum zs sum));

# Test case: [1, 3, 5, 0] -> false
(main) = (triples_sum_to_zero 
          (cons (s (z))  # 1
          (cons (s (s (s (z))))  # 3
          (cons (s (s (s (s (s (z))))))  # 5
          (cons (z)  # 0
          (nil))))));
